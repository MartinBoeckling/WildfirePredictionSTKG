library(sf)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)
library(leaflet)
library(ggplot2)
library(elevatr)
library(rgdal)
usa <- map_data('state')
california <- usa %>%
filter(region == 'california') %>%
select(c(long, lat)) %>%
rename(c(x = long, y = lat))
prj_dd <- "EPSG:4326"
california_sp <- SpatialPoints(california, proj4string = CRS(prj_dd))
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
library(sf)
library(sp)
library(raster)
library(dplyr)
library(spData)
library(spDataLarge)
library(tmap)
library(leaflet)
library(ggplot2)
library(elevatr)
library(rgdal)
# transform coordinates to spatial polygon
california_polygon <- sp::Polygon(cbind(california$x, california$y))
california_spol <- sp::SpatialPolygons(
list(sp::Polygons(list(california_polygon), ID='base')),
proj4string = CRS(prj_dd)
)
# create hexagonal grid
size <- 0.1
hex_points <- spsample(california_spol, type='hexagonal', offset=c(0,0), cellsize=size)
hex_grid <- HexPoints2SpatialPolygons(hex_points, dx = size)
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
plot(hex_points, col = "black", pch = 20, cex = 0.5, add = T)
plot(hex_grid, border = "orange", add = T)
library(sp)
sp::spsample
summary(hex_grid)
View(hex_grid)
# create hexagonal grid
size <- 10000
hex_points <- spsample(california_spol, type='hexagonal', cellsize=size)
#--------------------Create base map----------------------------
# load California map from ggplot
california_boundary <- st_read('~/Document/Github/wildfirearea/data/spatial data/california boundary/CA_State_TIGER2016.shp')
# load packages for spatial operations
library(sf)
california_boundary <- st_read('~/Document/Github/wildfirearea/data/spatial data/california boundary/CA_State_TIGER2016.shp')
california_spol <- as_Spatial(california_boundary)
# create hexagonal grid
size <- 10000
hex_points <- spsample(california_spol, type='hexagonal', cellsize=size)
hex_grid <- HexPoints2SpatialPolygons(hex_points, dx = size)
summary(hex_grid)
View(hex_grid)
hex_grid@polygons[[1]]@Polygons[[1]]@area
summary(hex_grid)
library(raster)
area(hex_grid)
unqiue(area(hex_grid))
unique(area(hex_grid))
summary(hex_grid)
View(california_boundary)
california_boundary$geometry
data("meuse.grid")
View(meuse.grid)
View(meuse.grid)
rm(meuse.grid)
View(california_sp)
View(hex_points)
hex_points@coords
# create hexagonal grid
size <- 1961.8873
hex_points <- spsample(california_spol, type='hexagonal', cellsize=size)
hex_grid <- HexPoints2SpatialPolygons(hex_points, dx = size)
View(hex_grid)
hex_grid@polygons[[1]]@Polygons[[1]]@area
unique(area(hex_grid))
# create hexagonal grid
size <- 10000
hex_points <- spsample(california_spol, type='hexagonal', cellsize=size)
View(hex_points)
hex_points@coords
View(california_spol)
california_spol@bbox
# create hexagonal grid
# area in square meters
area <- 10000000
cellSize <- 2 * sqrt(area/((3*sqrt(3)/2))) * sqrt(3)/2
hex_points <- spsample(california_spol, type='hexagonal', cellsize=cellSize)
hex_grid <- HexPoints2SpatialPolygons(hex_points, dx = cellSize)
unique(area(hex_grid))
View(hex_grid)
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
plot(hex_points, col = "black", pch = 20, cex = 0.5, add = T)
plot(hex_grid, border = "orange", add = T)
california_spol
summary(california_spol)
View(california_boundary)
california_boundary$geometry
rm(list=ls())
# load packages for spatial operations
library(sf)
library(sp)
#-------------------- Basic parameters-------------------------
prj_dd <- 'EPSG:3785'
#--------------------Create base map----------------------------
# load California map from ggplot
california_boundary <- st_read('~/Document/Github/wildfirearea/data/spatial data/california boundary/CA_State_TIGER2016.shp')
california_spol <- as_Spatial(california_boundary)
# create hexagonal grid
# area in square meters
area <- 10000000
cellSize <- 2 * sqrt(area/((3*sqrt(3)/2))) * sqrt(3)/2
hex_points <- spsample(california_spol, type='hexagonal', cellsize=cellSize)
hex_grid <- HexPoints2SpatialPolygons(hex_points, dx = cellSize)
View(hex_points)
gc()
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
plot(hex_points, col = "black", pch = 20, cex = 0.5, add = T)
plot(hex_grid, border = "orange", add = T)
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
?plot
plot(hex_grid, border = "orange", add = T)
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
plot(hex_points, col = "black", pch = 20, cex = 0.5, add = T)
plot(hex_grid, border = "orange", add = T, lwd=0.3)
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
plot(hex_points, col = "black", pch = 20, cex = 0.5, add = T)
plot(hex_grid, border = "orange", add = T, lwd=0.1)
plot(california_spol, col = "grey50", bg = "light blue", axes = TRUE)
plot(hex_grid, border = "orange", add = T, lwd=0.25)
load("~/OneDrive/UniversitaÌˆt Mannheim/3. Semster/Large Scale Data Integration Seminar/R Data/DataAnalysis.RData")
library(igraph)
library(visNetwork)
library(tidyverse)
# read and prepare data
data <- read.csv(file.choose())
View(data)
View(data)
data <- as.data.frame(data)
data <- data %>%
select(c('keyword1', 'keyword2', 'keyword3', 'keyword4', 'keyword5'))
data <- as.matrix(data)
# create edges overview
edges <- do.call(rbind.data.frame, lapply(1:(nrow(data)-1), function(i) t(combn(data[i,], 2))))
edges <- edges %>%
rename('from' = 'V1', 'to' = 'V2') %>%
group_by(from, to) %>%
summarise(width=n()) %>%
mutate(title = paste('Questions:', width))
# build graph on edges
graph <- graph_from_data_frame(edges, directed = FALSE)
graph <- igraph::simplify(graph)
View(graph)
summary(graph)
